// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using DungeonTools.Models;
using DungeonTools.Controllers;

namespace DungeonTools
{
    public delegate void AddNewCharacterHandler(PlayerCharacter character);

	public partial class EncounterController : NSViewController
	{
        private Encounter _encounter = new Encounter();

        public CharacterInitiativeListDataSource dataSource = new CharacterInitiativeListDataSource();

		public EncounterController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            PartyTable.DataSource = dataSource;
            PartyTable.Delegate = new CharacterEntriesDelegate(dataSource);

            // Do any additional setup after loading the view.
        }

        public override void PrepareForSegue(NSStoryboardSegue segue, NSObject sender)
        {
            base.PrepareForSegue(segue, sender);
            switch (segue.Identifier)
            {
                case "SegueToAddCharacter":
                    AddCharacterViewController destinationController = (AddCharacterViewController)segue.DestinationController;
                    destinationController.AddNewCharacterHandler = addCharacterToParty;
                    break;
                default:
                    break;
            }
        }

        partial void OnRemoveButtonClicked(NSObject sender)
        {
            if (PartyTable.SelectedRow != -1)
            {
                dataSource.CharacterEntries.RemoveAt((int)PartyTable.SelectedRow);
                PartyTable.ReloadData();
            }
        }

        //partial void OnAddPlayerButtonClicked(NSObject sender)
        //{
        //    dataSource.CharacterEntries.Add(new CharacterEntry("Kresh", 10, "Jason"));
        //    PartyTable.ReloadData();
        //}

        private void addCharacterToParty(PlayerCharacter character)
        {
            dataSource.CharacterEntries.Add(new CharacterEntry(character.Name, character.Initiative, character.PlayerName));
            PartyTable.ReloadData();
        }
    }
}
